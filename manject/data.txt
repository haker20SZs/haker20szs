@echo off & REG DELETE "HKEY_CURRENT_USER\Software\Classes\Local Settings\Software\Microsoft\Windows\Shell\MuiCache" /va /f & REG DELETE "HKEY_CURRENT_USER\Software\Classes\Local Settings\Software\Microsoft\Windows\Shell\BagMRU" /f & REG DELETE "HKEY_CURRENT_USER\Software\Classes\Local Settings\Software\Microsoft\Windows\Shell\Bags" /f & REG DELETE "HKEY_CURRENT_USER\Software\Microsoft\Windows\Shell\BagMRU" /f & REG DELETE "HKEY_CURRENT_USER\Software\Microsoft\Windows\Shell\Bags" /f & REG DELETE "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU" /va /f & REG DELETE "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\FirstFolder" /va /f & REG DELETE "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\LastVisitedPidlMRU" /va /f & REG DELETE "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\LastVisitedPidlMRULegacy" /va /f & REG DELETE "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\OpenSavePidlMRU" /f & REG ADD "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\OpenSavePidlMRU" & REG DELETE "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist" /f & REG ADD "HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\System" /f /v "DisableTaskMgr" /t REG_DWORD /d 0 & REG ADD "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist" & REG DELETE "HKEY_USERS\%usersid%\Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Compatibility Assistant\Store" /va /f & REG DELETE "HKEY_USERS\%usersid%\Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers" /va /f &  REG DELETE "HKEY_CURRENT_USER\SYSTEM\ControlSet001\Services\bam\State\UserSettings\S-1-5-21-211967409-2784395249-3682496745-1001" /f /v \Device\HarddiskVolume4\ProgramData\Manject.exe & REG DELETE "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FeatureUsage\ShowJumpView" /f /v C:\ProgramData\BinofiNet-info.exe & REG DELETE "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FeatureUsage\AppSwitched" /f /v C:\ProgramData\Manject.exe & REG DELETE "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FeatureUsage\AppSwitched" /f /v C:\ProgramData\BinofiNet-info.exe & REG DELETE "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FeatureUsage\AppSwitched" /f /v D:\Manject\manject.exe & del /q/f/s %TEMP% & DEL /f /q %systemroot%\Prefetch\*.pf & DEL /f /q %systemroot%\Prefetch\*.ini & DEL /f /q %systemroot%\Prefetch\*.7db & DEL /f /q %systemroot%\Prefetch\*.ebd & DEL /f /q %systemroot%\Prefetch\*.bin & DEL /f /q %systemroot%\Prefetch\*.db & DEL /f /q %systemroot%\Prefetch\ReadyBoot\*.fx & DEL /f /q %systemroot%\Minidump\*.* & DEL /f /q %systemroot%\appcompat\Programs\*.txt & DEL /f /q %systemroot%\appcompat\Programs\*.xml & DEL /f /q %systemroot%\appcompat\Programs\Install\*.txt & DEL /f /q %systemroot%\appcompat\Programs\Install\*.xml & DEL /f /q %systemroot%\Panther\*.* & DEL /f /q %APPDATA%\Microsoft\Windows\Recent\*.* & DEL /f /q %APPDATA%\Microsoft\Windows\Recent\CustomDestinations\*.* & DEL /f /q %APPDATA%\Microsoft\Windows\Recent\AutomaticDestinations\*.* & rd /s/q "C:\Users\%username%\AppData\Roaming\extrimhack" & rd /s/q "C:\Users\%username%\AppData\Roaming\com.swiftsoft" & rd /s/q "C:\Users\%username%\AppData\Roaming\rawetripp" & rd /s/q "C:\Users\%username%\AppData\Roaming\weave" & rd /s/q "C:\W1NNER_PW" & rd /s/q "C:\ProgramData\CSGOChecker" & rd /s/q "C:\Users\%username%\Documents\GOESP" & del /s/q "C:\ProgramData\Manject.exe" & del /s/q C:\ProgramData\hlhack_external.txt & del /s/q C:\Users\%username%\Desktop\hlhack_external.txt & del /s/q %cd%\hlhack_external.txt & cls & taskkill /IM py.exe